package com.expertedge.entrustplugin.ws;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.7
 * 2018-06-21T22:11:01.788+01:00
 * Generated source version: 2.7.7
 * 
 */
//@WebServiceClient(name = "EntrustMultiFactorAuthImplService", 
//                  wsdlLocation = "file:/C:/Users/waliu.faleye/Documents/workspace-sts-3.8.2.RELEASE/consolidatedapps/src/main/resources/entrust.wsdl",
//                  targetNamespace = "http://ws.entrustplugin.expertedge.com/") 
public class EntrustMultiFactorAuthImplService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://ws.entrustplugin.expertedge.com/", "EntrustMultiFactorAuthImplService");
    public final static QName EntrustMultiFactorAuthImplPort = new QName("http://ws.entrustplugin.expertedge.com/", "EntrustMultiFactorAuthImplPort");
    static {
        URL url = null;
        try {
            //url = new URL("file:/C:/Users/waliu.faleye/Documents/workspace-sts-3.8.2.RELEASE/consolidatedapps/src/main/resources/entrust.wsdl");
        	url = new URL("file:/C:/system/entrust.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(EntrustMultiFactorAuthImplService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/C:/Users/waliu.faleye/Documents/workspace-sts-3.8.2.RELEASE/consolidatedapps/src/main/resources/entrust.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public EntrustMultiFactorAuthImplService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public EntrustMultiFactorAuthImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public EntrustMultiFactorAuthImplService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public EntrustMultiFactorAuthImplService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public EntrustMultiFactorAuthImplService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public EntrustMultiFactorAuthImplService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns EntrustMultiFactorAuthImpl
     */
    @WebEndpoint(name = "EntrustMultiFactorAuthImplPort")
    public EntrustMultiFactorAuthImpl getEntrustMultiFactorAuthImplPort() {
        return super.getPort(EntrustMultiFactorAuthImplPort, EntrustMultiFactorAuthImpl.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns EntrustMultiFactorAuthImpl
     */
    @WebEndpoint(name = "EntrustMultiFactorAuthImplPort")
    public EntrustMultiFactorAuthImpl getEntrustMultiFactorAuthImplPort(WebServiceFeature... features) {
        return super.getPort(EntrustMultiFactorAuthImplPort, EntrustMultiFactorAuthImpl.class, features);
    }
    
    public static void main(String args []){
    	EntrustMultiFactorAuthImplService srv = new EntrustMultiFactorAuthImplService();
    	UserAdminDTO arg0 = new UserAdminDTO();
    	arg0.setEnableOTP(true);
    	arg0.setFullname("walex");
    	arg0.setGroup("default");
    	arg0.setUserName("walex");
    	AdminResponseDTO res = srv.getEntrustMultiFactorAuthImplPort().performCreateEntrustUser(arg0);
    	System.out.println("res.getRespMessageCode()==="+res.getRespMessageCode());
    	System.out.println("res.getRespMessage()==="+res.getRespMessage());
    	System.out.println("res.getRespCode()==="+res.getRespCode());
    }

}
